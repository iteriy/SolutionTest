apply plugin: 'com.android.application'

repositories {
    google()
    maven { url "https://maven.google.com" }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "ru.panmin.solution"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.debug
    }

    File releaseSignFile = rootProject.file('release_keystore.properties')
    Properties releaseSignProperties
    if (releaseSignFile.exists()) {
        releaseSignProperties = new Properties()
        releaseSignProperties.load(new FileInputStream(releaseSignFile))
    }

    signingConfigs {
        release {
            storeFile file('keystore/' + releaseSignProperties['keystore'])
            storePassword releaseSignProperties['storePassword']
            keyAlias releaseSignProperties['keyAlias']
            keyPassword releaseSignProperties['keyPassword']
        }
        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        beta {
            initWith release
        }
        internal {
            initWith release
            versionNameSuffix
            signingConfig signingConfigs.debug
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            versionNameSuffix
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    //== Android Support ==//
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"

    //== Retrofit ==//
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"

    //== Rx ==//
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.3'

    //== ButterKnife ==//
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    debugImplementation "com.readystatesoftware.chuck:library:$CHUCK_VERSION"
    internalImplementation "com.readystatesoftware.chuck:library:$CHUCK_VERSION"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$CHUCK_VERSION"
    betaImplementation "com.readystatesoftware.chuck:library-no-op:$CHUCK_VERSION"

    //== Dagger ==//
    def daggerImplementation = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor daggerImplementation
    testImplementation daggerImplementation
    androidTestImplementation daggerImplementation

    implementation 'com.jakewharton.timber:timber:4.5.1'
}